{
  "hash": "76389e9c26e5f429e3fb24d2e0eb6978",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercice 2.01\"\nauthor: \"Clément Poupelin\"\ndate: \"2025-03-03\"\ndate-modified: \"2025-03-03\"\nformat: \n  html:\n    embed-resources: false\n    toc: true\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-tools: true\n    toc-location: right\n    page-layout: article\n    code-overflow: wrap\ntoc: true\nnumber-sections: false\neditor: visual\ncategories: [\"Fiche 2\", \"Différenciation\", \"Tendance\", \"Saisonnalité\"]\nimage: \"\"\ndescription: \"Nous allons ici voir l'impact de l'opération de **différenciation** pour des données simulées avec **tendance** et **saisonnalité**\"\n---\n\n\n\n# Intervenant.e.s\n\n### Rédaction\n\n-   **Clément Poupelin**, [clementjc.poupelin\\@gmail.com](mailto:clementjc.poupelin@gmail.com){.email}\\\n\n### Relecture\n\n-   \n\n# Setup\n\n:::: panel-tabset\n## Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Données\nlibrary(dplyr)        # manipulation des données\n\n# Esthétique\nlibrary(latex2exp)   ## TeX\nlibrary(ggplot2)     ## ggplot\n```\n:::\n\n\n\n## Fonctions\n\n::: panel-tabset\n\n### Série temporelle simulée\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSim_serie <- function(n, a, b, w) {\n  x <- a * cos(w * seq(1, n)) + b * seq(1, n) + rnorm(n)\n  return(ts(x))\n}\n```\n:::\n\n\n\n### Plot de séries temporelles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggTimeSerie <- function(ts) {\n  df_series <- data.frame(Time = seq_along(ts), X_t = ts)\n  \n  p <- ggplot(df_series, aes(x = Time, y = X_t)) +\n    geom_line(color = \"red\") +\n    labs(title = TeX(paste0(\n      \"Série $X_j$ pour n = \", length(ts)\n    )),\n    x = \"Time\",\n    y = \"Simulated series\") +\n    theme_minimal()\n  \n  return(p)\n}\n```\n:::\n\n\n\n\n### Plot pour ACF et PACF\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggACF <- function(ts) {\n  acf_data <- acf(ts, plot = FALSE)\n  df_acf <- data.frame(Lag = acf_data$lag, ACF = acf_data$acf)\n  \n  pacf_data <- pacf(ts, plot = FALSE)\n  df_pacf <- data.frame(Lag = pacf_data$lag, PACF = pacf_data$acf)  \n  \n  # Intervalle de confiance\n  ci <- qnorm((1 + 0.95) / 2) / sqrt(length(ts))\n  \n  # ACF \n  p_acf <- ggplot(df_acf, aes(x = Lag, y = ACF)) +\n    geom_segment(aes(xend = Lag, yend = 0), color = \"red\") +\n    geom_point(color = \"red\") +\n    labs(title = \"Autocorrelation Function (ACF)\", x = \"Lag\", y = \"ACF\") +\n    geom_hline(yintercept = c(-ci, ci), color = \"blue\", linetype = \"dashed\") +\n    theme_minimal()\n  \n  # PACF \n  p_pacf <- ggplot(df_pacf, aes(x = Lag, y = PACF)) +  \n    geom_segment(aes(xend = Lag, yend = 0), color = \"red\") +\n    geom_point(color = \"red\") +\n    labs(title = \"Partial Autocorrelation Function (PACF)\", x = \"Lag\", y = \"PACF\") +\n    geom_hline(yintercept = c(-ci, ci), color = \"blue\", linetype = \"dashed\") +\n    theme_minimal()\n  \n  return(list(ACF = p_acf, PACF = p_pacf))\n}\n```\n:::\n\n\n\n\n:::\n\n## Seed\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(140400)\n```\n:::\n\n\n::::\n\n# Données\n\nPour cette exercice, nous allons utilisé une fonction qui retourne une série simulée de la forme $X_j = a \\text{cos}(ω_j) + bj + \\varepsilon_j$, $j=1, ..., n$, avec $(\\varepsilon_j)$ un bruit blanc gaussien centré et de variance 1.\n\nLes paramètres d’entrée de la fonction sont $n$, $a$, $b$, $w$ et la sortie est une série temporelle. \n\n::: callout-note\nPour définir une série comme série temporelle, on utilise la fonction *`ts`* qui transforme nos points générés en une série temporelle.\n:::\n\nOn pose maintenant différents paramètres que l'on testeras : \n\n- $n=100$ ou $n=500$\n\n- $a=0$ ou $a=2$\n\n- $b=.01$ ou $b=0$\n\n- $w=\\frac{\\pi}{6}$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- c(100, 500)\na <- c(0, 2)\nb <- c(0.01, 0)\nw <- pi/6\n```\n:::\n\n\n\n\n# Situation avec tendance mais sans saisonnalité\n\nPour cette situation, nous allons utiliser $a=0$ et $b=.01$. Ainsi nous aurons la série simulée $X_j = .01j + \\varepsilon_j$.\n\nCommencons par repésenter la série ainsi que sa suite des auto-corrélations empiriques pour $n=100$ et $n=500$.\n\n::: callout-note \nPour tracer notre série temporelle et sa suites des auto-corrélations empiriques, on pourrait se contenter d'utiliser les fonctions de bases *`plot`* et *`acf`*.\n:::\n\n::: panel-tabset\n\n## $n=100$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSim_serie_drift_100 <- Sim_serie(n[1], a[1], b[1], w)\n\ngridExtra::grid.arrange(ggTimeSerie(Sim_serie_drift_100), ggACF(Sim_serie_drift_100)$ACF, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_02.02_files/figure-html/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## $n=500$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSim_serie_drift_500 <- Sim_serie(n[2], a[1], b[1], w)\n\ngridExtra::grid.arrange(ggTimeSerie(Sim_serie_drift_500), ggACF(Sim_serie_drift_500)$ACF, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_02.02_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nNous pouvons constater ici la présence d'une tendance qui se renforce quand $n=500$. Et nous voyons bien l'impact que cela a sur la suite des auto-corrélation avec des auto-corrélation élevés quand $n=500$.\\\n\nMais cela nous fait donc aussi remarquer qu'il faut être prudent avec les tendances qui ne sont pas toujours évidentes à repérer lorsque $n$ est \"petit\".\n:::\n\n## Différenciation d'ordre 1\n\nIci, nous allons procéder à une opération d'ordre 1. Cela signifi que pour notre série $X_j$, nous allons effectuer l'opération $X_j − X_{j−1}$.\\\nCette opération peut ce faire facilement avec la fonction *`diff`*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSim_serie_drift_100_diff <- diff(Sim_serie_drift_100, lag = 1)\nSim_serie_drift_500_diff <- diff(Sim_serie_drift_500, lag = 1)\n```\n:::\n\n\n\nMaintenant, nous pouvons donc regarder l'effet que cette différenciation d'orde 1 a pu avoir sur notre série et son graphe des auto-corrélations empiriques.\n\n::: panel-tabset\n\n## $n=100$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngridExtra::grid.arrange(ggTimeSerie(Sim_serie_drift_100_diff), ggACF(Sim_serie_drift_100_diff)$ACF, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_02.02_files/figure-html/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## $n=500$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngridExtra::grid.arrange(ggTimeSerie(Sim_serie_drift_500_diff), ggACF(Sim_serie_drift_500_diff)$ACF, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_02.02_files/figure-html/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nNous pouvons maintenant constater une disparition de la tendance qui était pourtant évidente (surtout dans le cas $n=500$) avant la différenciation.\n\nEt au niveau du graphe des ACF, nous voyons que les auto-corrélations sont nettement inférieur à ce que l'on a pu observer précédemment.\n:::\n\n# Situation sans tendance mais avec saisonnalité\n\n\nPour cette situation, nous allons utiliser $a=2$ et $b=0$. Ainsi nous aurons la série simulée $X_j = 2 \\text{cos}(ω_j) + \\varepsilon_j$.\n\nCommencons par repésenter la série ainsi que sa suite des auto-corrélations empiriques pour $n=100$ et $n=500$.\n\n::: panel-tabset\n\n## $n=100$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSim_serie_season_100 <- Sim_serie(n[1], a[2], b[2], w)\n\ngridExtra::grid.arrange(ggTimeSerie(Sim_serie_season_100), ggACF(Sim_serie_season_100)$ACF, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_02.02_files/figure-html/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## $n=500$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSim_serie_season_500 <- Sim_serie(n[2], a[2], b[2], w)\n\ngridExtra::grid.arrange(ggTimeSerie(Sim_serie_season_500), ggACF(Sim_serie_season_500)$ACF, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_02.02_files/figure-html/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nNous pouvons constater ici qu'il ne semble pas y avoir de de tendance. Cependant nous sentons bien la présence d'une saisonnalité. Ici nous voyons bien avec le graphe de la suite des auto-corrélations que les auto-corrélation sont élevés et on peut également distinguer à quel temps se trouve la saisonnalié (ici cela semble être à $j=12$).\\\n\n:::\n\n## Différenciation d'ordre 12\n\nIci, nous allons procéder à une opération d'ordre 12. Cela signifi que pour notre série $X_j$, nous allons effectuer l'opération $X_j − X_{j−12}$.\\\nCette opération peut ce faire facilement avec la fonction *`diff`*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSim_serie_season_100_diff <- diff(Sim_serie_season_100, lag = 12)\nSim_serie_season_500_diff <- diff(Sim_serie_season_500, lag = 12)\n```\n:::\n\n\n\nMaintenant, nous pouvons donc regarder l'effet que cette différenciation d'orde 12 a pu avoir sur notre série et son graphe des auto-corrélations empiriques.\n\n::: panel-tabset\n\n## $n=100$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngridExtra::grid.arrange(ggTimeSerie(Sim_serie_season_100_diff), ggACF(Sim_serie_season_100_diff)$ACF, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_02.02_files/figure-html/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## $n=500$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngridExtra::grid.arrange(ggTimeSerie(Sim_serie_season_500_diff), ggACF(Sim_serie_season_500_diff)$ACF, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_02.02_files/figure-html/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nNous pouvons maintenant constater un atténuissement de la saisonnalité qui était pourtant évidente visible (et même tès visible sur le graphe des ACF).\n\nPuis au niveau du graphe des ACF, nous voyons que les auto-corrélations sont nettement inférieur à ce que l'on a pu observer précédemment avec tout de même quelques \"pics\" toujours présents.\n:::\n\n# Conclusion\n\nPour conclure, nous avons pu constater qu'en grandissant l'échantillon, la tendance et la saisonnalité ressortent d'avantage et influencent nos auto-corrélations. Nous ne pouvons donc pas considérer les séries comme stationnaires.\n\n::: callout-note\nUne série est dite stationnaire si la structure n'évolue pas avec le temps, i.e soit un processus temporel $(Z_i)_i$, $\\forall k$ et pour toute fonction $f$ mesurable $f(Z_1, ..., Z_t)$ et $f(Z_{1+k}, ..., Z_{t+k})$ ont même loi.\n:::\n\nCependant, l'opération de différenciation peut permettre de résoudre ce problème d'auto-corrélations quand celle ci est adaptée à la \"perturbation\"(tendance ou saison) de notre série.\n\nPour visualiser cela, on peut effecuer les calculs. Dans le cas de la série $X_j = 0.01j +\\varepsilon_j$ Où il reste l'effet de tendance, \n\\begin{align*}\nX_j - X_{j-1} &= 0.01j +\\varepsilon_j - 0.01(j-1) -\\varepsilon_{j-1}\\\\\n &= 0.01j - 0.01j - 0.01  + \\varepsilon_j  - \\varepsilon_{j-1}\\\\\n &= -0.01  +\\varepsilon_j  - \\varepsilon_{j-1}\\\\\n\\end{align*} \nAinsi, nous avons bien une disparition de la tendance.\n\nEt dans le cas de la série $X_j = 2cos(\\frac{\\pi}{6}j) + \\varepsilon_j$ où il reste l'effet de saison,\n\\begin{align*}\nX_j - X_{j-12} &= 2cos(\\frac{\\pi}{6}j) +\\varepsilon_j - 2cos(\\frac{\\pi}{6}(j-12)) -\\varepsilon_{j-12}\\\\\n &= 2cos(\\frac{\\pi}{6}j) +\\varepsilon_j - 2cos(\\frac{\\pi}{6}j-\\frac{\\pi}{6}12) -\\varepsilon_{j-12}\\\\\n &= 2cos(\\frac{\\pi}{6}j) +\\varepsilon_j - 2cos(\\frac{\\pi}{6}j-2\\pi) -\\varepsilon_{j-12}\\\\\n &= 2cos(\\frac{\\pi}{6}j) +\\varepsilon_j - 2(cos(\\frac{\\pi}{6}j)cos(2\\pi) - sin(\\frac{\\pi}{6}j)sin(2\\pi)) -\\varepsilon_{j-12}\\\\\n &= 2cos(\\frac{\\pi}{6}j) +\\varepsilon_j - 2(cos(\\frac{\\pi}{6}j) - 0) -\\varepsilon_{j-12}\\\\\n &= \\varepsilon_j -\\varepsilon_{j-12}\\\\\n\\end{align*} \nNous avons maintenant une disparition de la saison.\n\nAutrement dit, une différenciation d'ordre 1 permettra d'enlever la tendance et une différenciation d'ordre $s$ permettra d'enlever une saison de période $s$.\n\n# Session info\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info(pkgs = \"attached\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31)\n os       Ubuntu 24.04.1 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  fr_FR.UTF-8\n ctype    fr_FR.UTF-8\n tz       Europe/Paris\n date     2025-03-03\n pandoc   3.2 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/x86_64/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package   * version date (UTC) lib source\n dplyr     * 1.1.4   2023-11-17 [1] CRAN (R 4.4.2)\n ggplot2   * 3.5.1   2024-04-23 [1] CRAN (R 4.4.2)\n latex2exp * 0.9.6   2022-11-28 [1] CRAN (R 4.4.2)\n\n [1] /home/clement/R/x86_64-pc-linux-gnu-library/4.4\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Exercice_02.02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}