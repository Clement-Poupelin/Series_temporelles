{
  "hash": "2f33d40da684b940f9da5521582bd165",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercice 2.01\"\nauthor: \"Clément Poupelin\"\ndate: \"2025-02-xx\"\ndate-modified: \"2025-02-28\"\nformat: \n  html:\n    embed-resources: false\n    toc: true\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-tools: true\n    toc-location: right\n    page-layout: article\n    code-overflow: wrap\ntoc: true\nnumber-sections: false\neditor: visual\ncategories: [\"Fiche 2\", \"Marche aléatoire\", \"Signal linéraire bruité\"]\nimage: \"\"\ndescription: \"L'objectif de ce document est détudier la différence entre une **marche aléatoire** et un **signal linéraire bruité**\"\n---\n\n\n\n\n\n# Intervenant.e.s\n\n### Rédaction\n\n-   **Clément Poupelin**, [clementjc.poupelin\\@gmail.com](mailto:clementjc.poupelin@gmail.com){.email}\\\n\n### Relecture\n\n-   \n\n# Setup\n\n:::: panel-tabset\n## Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Données\nlibrary(dplyr)        # manipulation des données\n\nlibrary(latex2exp)\n\n# Plots\n## ggplot\nlibrary(ggplot2)\nlibrary(gridExtra)\n```\n:::\n\n\n\n## Fonctions\n\n::: panel-tabset\n\n### Marche aléatoire\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrandom_walk <- function(n, delta) {\n  w <- rnorm(n)  \n  drift <- delta * seq(1, n)  \n  \n  x <- drift + cumsum(w)\n  return(x)  \n}\n```\n:::\n\n\n\n### Signal linéaire bruité\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnoisy_serie <- function(n, delta) {\n  w <- rnorm(n, sd = 1)  \n  drift <- delta * seq(1, n) \n  \n  x <- drift + w\n  return(x)  \n}\n```\n:::\n\n\n\n## Plot des simulations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_simulation_time_series <- function(data, main_title, y_lab) {\n  plot_data <- data.frame(\n    Time = rep(1:n, I),\n    Value = as.vector(data),\n    Group = rep(1:I, each = n)\n  )\n  \n  ggplot(plot_data, aes(\n    x = Time,\n    y = Value,\n    group = Group,\n    color = factor(Group)\n  )) +\n    geom_line() +\n    scale_color_viridis_d(name = \"Time séries\")  +\n    labs(title = main_title,\n    x = \"Time\",\n    y = y_lab) +\n    theme_minimal() + \n    theme(legend.title = element_text(size = 18),\n          legend.text = element_text(size = 12),\n          axis.title = element_text(size = 16),\n          axis.text = element_text(size = 14),\n          plot.title = element_text(size = 18, face = \"bold\"))\n  \n}\n```\n:::\n\n\n\n\n\n:::\n\n## Seed\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(140400)\n```\n:::\n\n\n\n\n::::\n\n# Données\n\nPour cette exercice, nous allons étudier deux types de séries temporelles : **les marches aléatoires** et **les signaux linéaires bruités**.\n\nPour cela nous allons simuler : \n\n- dix marches aléatoires $(x_t)_t$ avec dérive de longueur $n=100$, de paramètre $\\delta=.01$ et de variance $\\sigma_W^2=1$ pour le bruit.\n\n- dix séries $(x_t)_t$ de la forme $x_t = \\delta_t + w_t$ (tendance+bruit blanc) de longueur $n = 100$, de paramètre $\\delta = .01$ et de variance $\\sigma^2_W = 1$\n\n::: callout-note\nSi on pose que $x_0 = w_0$, on peut écrire notre marche aléatoire comme $x_t = \\delta t + \\sum_{i=0}^{t}w_i$\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100      ## length    \ndelta <- .01  ## drift parameter   \nI <- 10       ## number of series\n```\n:::\n\n\n\n::: panel-tabset\n\n## Marche aléatoire\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- t(simplify2array(lapply(1:I, function(i) random_walk(n, delta))))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_simulation_time_series(sim, main_title = TeX(paste(\"Simulation of\", I, \"Random Walks with drift $\\\\delta$ =\", delta)), y_lab = \"Random Walk\")\n```\n\n::: {.cell-output-display}\n![](Exercice_02.01_files/figure-html/unnamed-chunk-7-1.png){width=1152}\n:::\n:::\n\n\n\n## Signal linéaire bruité\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim2 <- t(simplify2array(lapply(1:I, function(i) noisy_serie(n, delta))))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_simulation_time_series(sim2, main_title = paste(\"Simulation of\", I, \"linear noisy series\"), y_lab = \"Noisy serie\")\n```\n\n::: {.cell-output-display}\n![](Exercice_02.01_files/figure-html/unnamed-chunk-9-1.png){width=1152}\n:::\n:::\n\n\n:::\n\n# Estimation du modèle de régression linéaire\n\n::: panel-tabset\n\n## Marche aléatoire\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim_coeff <- apply(sim, 1, function(x) {\n  mod <- lm(x ~ 0 + seq(1, n))  # Régression sans intercept\n  return(mod$coefficients)  # Retourner le coefficient de la régression\n})\n```\n:::\n\n\n\n\n## Signal linéaire bruité\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim2_coeff <- apply(sim2, 1, function(x) {\n  mod <- lm(x ~ 0 + seq(1, n))  # Régression sans intercept\n  return(mod$coefficients)  # Retourner le coefficient de la régression\n})\n```\n:::\n\n\n\n:::\n\nAvec ces résulats, nous pouvons par la suite représenter sur un même graphique les dix droites estimées et la tendance moyenne théorique $\\delta_t=.01t$.\n\n::: panel-tabset\n\n## Marche aléatoire\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime <- seq(1, n)\n\n# Créer un data.frame pour les courbes simulées\nsim_data <- data.frame(\n  time = rep(time, I),\n  value = unlist(lapply(1:I, function(i) sim_coeff[i] * time)),\n  group = rep(1:I, each = n)\n)\n\n# Créer la ligne théorique\ntheoretical_trend <- data.frame(\n  time = time,\n  value = 0.01 * time,\n  group = \"Theoretical Trend\"\n)\n\n# Plot avec ggplot\nlibrary(ggplot2)\n\nggplot(sim_data, aes(x = time, y = value, group = group, color = factor(group))) +\n  geom_line(size = .5, color = \"orange\") +  # Courbes simulées\n  geom_line(data = theoretical_trend, aes(x = time, y = value), color = \"red\", linetype = \"dashed\", size = 1.) +  # Ligne théorique\n  labs(\n    title = \"Graphe of the estimations\",\n    x = \"Time\",\n    y = \"Estimated values\",\n    color = \"Simulated Curves\"\n  ) +\n  scale_color_manual(values = rep(\"orange\", I)) +  # Couleur orange pour toutes les courbes simulées\n  theme_minimal() +\n  theme(legend.position = \"topleft\") +\n  annotate(\"text\", x = 10, y = 9, label = TeX(\"Theoretical trend $\\\\delta_t = 0.01t$\"), color = \"red\", hjust = 0)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in is.na(x): is.na() appliqué à un objet de type 'expression' qui n'est\nni une liste, ni un vecteur\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Exercice_02.01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nMETTRE LES CONCLUSIONS\n:::\n\n## Signal linéaire bruité\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime <- seq(1, n)\n\n# Créer un data.frame pour les courbes simulées\nsim_data <- data.frame(\n  time = rep(time, I),\n  value = unlist(lapply(1:I, function(i) sim2_coeff[i] * time)),\n  group = rep(1:I, each = n)\n)\n\n# Créer la ligne théorique\ntheoretical_trend <- data.frame(\n  time = time,\n  value = 0.01 * time,\n  group = \"Theoretical Trend\"\n)\n\n\nggplot(sim_data, aes(x = time, y = value, group = group, color = factor(group))) +\n  geom_line(size = .5, color = \"orange\") +  # Courbes simulées\n  geom_line(data = theoretical_trend, aes(x = time, y = value), color = \"red\", linetype = \"dashed\", size = 1.) +  # Ligne théorique\n  labs(\n    title = \"Graphe of the estimations\",\n    x = \"Time\",\n    y = \"Estimated values\",\n    color = \"Simulated Curves\"\n  ) +\n  scale_color_manual(values = rep(\"orange\", I)) +  # Couleur orange pour toutes les courbes simulées\n  theme_minimal() +\n  theme(legend.position = \"topleft\") +\n  annotate(\"text\", x = 10, y = 9, label = TeX(\"Theoretical trend $\\\\delta_t = 0.01t$\"), color = \"red\", hjust = 0)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in is.na(x): is.na() appliqué à un objet de type 'expression' qui n'est\nni une liste, ni un vecteur\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Exercice_02.01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nMETTRE LES CONCLUSIONS\n:::\n\n\n:::\n\n\n\n# Conclusion\n\nNos avonc pu observé que blablabla\n\n# Session info\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info(pkgs = \"attached\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31)\n os       Ubuntu 24.04.1 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  fr_FR.UTF-8\n ctype    fr_FR.UTF-8\n tz       Europe/Paris\n date     2025-02-28\n pandoc   3.2 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/x86_64/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package   * version date (UTC) lib source\n dplyr     * 1.1.4   2023-11-17 [1] CRAN (R 4.4.2)\n ggplot2   * 3.5.1   2024-04-23 [1] CRAN (R 4.4.2)\n gridExtra * 2.3     2017-09-09 [1] CRAN (R 4.4.2)\n latex2exp * 0.9.6   2022-11-28 [1] CRAN (R 4.4.2)\n\n [1] /home/clement/R/x86_64-pc-linux-gnu-library/4.4\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Exercice_02.01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}